@implements IDisposable

@inject NavigationManager NavigationManager

<div class="top-row navbar">
    <div class="container-fluid">
        <AuthorizeView>
            <Authorized>
                <a class="navbar-brand" href="dashboard"><h1 class="text-4xl px-16 text-center text-purple-900">TMS</h1></a>
            </Authorized>
            <NotAuthorized>
                <a class="navbar-brand" href=""><h1 class="text-4xl px-16 text-center text-purple-900">TMS</h1></a>
            </NotAuthorized>
        </AuthorizeView>
       
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable bg-purple-900" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
         <AuthorizeView>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="dashboard">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Dashboard
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="tasks">
                <span class="bi bi-list-task" aria-hidden="true"></span> Tasks
            </NavLink>
        </div>
         </AuthorizeView>

    </nav>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

